name: CI/CD Dry Run

on:
  pull_request:
    paths:
      - packages/{frontend,backend}/dockerfile
      - packages/{frontend,backend}/pnpm-lock.yaml
      - pnpm-lock.yaml

jobs:
  build_docker_backend_dry_run:
    name: Build Docker Backend Dry Run
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
        include:
          - app: frontend
            context: ./packages/frontend
            file: ./packages/frontend/dockerfile
            needs_auth_client_id: true
          - app: backend
            context: ./packages/backend
            file: ./packages/backend/dockerfile
            needs_auth_client_id: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            vastsea/vastsea-sso-${{ matrix.app }}
            ${{ vars.REGISTRY_ADDRESS }}/${{ vars.REGISTRY_NAMESPACE }}/${{ vars.IMAGE_NAME }}-${{ matrix.app }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=${{ github.event_name != 'pull_request' }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://${{ vars.REGISTRY_ADDRESS }}
          username: "${{ vars.REGISTRY_USERNAME }}"
          password: "${{ secrets.REGISTRY_PASSWORD }}"

      - name: Build and push frontend
        if: matrix.app == 'frontend'
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_URL=/api
            AUTH_SERVER_CLIENT_ID=${{ secrets.AUTH_SERVER_CLIENT_ID }}
      
      - name: Build and push backend
        if: matrix.app == 'backend'
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
